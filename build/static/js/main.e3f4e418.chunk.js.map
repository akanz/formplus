{"version":3,"sources":["Redux/Types.js","Redux/Actions.js","img/search.svg","components/Navbar.js","components/Card.js","skeleton/SkeletonCard.js","skeleton/Shimmer.js","skeleton/SkeletonContainer.js","components/Pagination.js","img/info.svg","components/Subnav.js","components/Content.js","components/Main.js","Redux/Reducers.js","Redux/store.js","components/App.js","index.js"],"names":["CHANGE_SEARCH_FIELD","FETCH_TEMPLATE_DETAILS","FETCH_TEMPLATE_REQUEST","FETCH_TEMPLATE_SUCCESS","FETCH_TEMPLATE_ERROR","CHANGE_CATEGORY","CHANGE_ORDER_FIELD","CHANGE_DATE_FIELD","fetchtemplatesrequest","type","fetchfromapi","dispatch","axios","get","then","result","results","data","payload","catch","error","errormessage","message","connect","state","searchvalue","searchfield","dateValue","datefield","orderValue","orderfield","onsearchchange","eventval","fetchtemplates","changecategory","e","changingorder","changebydate","useEffect","console","log","className","value","onChange","target","placeholder","src","search","handleChange","Card","props","info","name","description","link","SkeletonCard","classes","Shimmer","SkeletonContainer","Pagination","pageAmount","totalContent","paginate","prevPage","maxPgLimit","pgLimit","minPgLimit","pageNumbers","totalRows","Math","ceil","i","push","map","onClick","category","categoryfield","Data","ordervalue","datevalue","ordersortvalue","filteredData","filter","res","useState","page","setPage","setmaxPgLimit","setminPgLimit","sort","a","b","localeCompare","Date","created","lastContent","firstContent","currentContent","slice","length","id","Main","initialstate","loading","reducer","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3f4e418.chunk.js","sourcesContent":["export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\"\r\nexport const FETCH_TEMPLATE_DETAILS = \"FETCH_TEMPLATE_DETAILS\"\r\nexport const FETCH_TEMPLATE_REQUEST = \"FETCH_TEMPLATE_REQUEST\"\r\nexport const FETCH_TEMPLATE_SUCCESS = \"FETCH_TEMPLATE_SUCCESS\"\r\nexport const FETCH_TEMPLATE_ERROR = \"FETCH_TEMPLATE_ERROR\"\r\nexport const CHANGE_CATEGORY = 'CHANGE_CATEGORY'\r\nexport const CHANGE_ORDER_FIELD = \"CHANGE_ORDER_FIELD\"\r\nexport const CHANGE_DATE_FIELD = 'CHANGE_DATE_FIELD'\r\nexport const CHANGE_SELECT_VALUE = 'CHANGE_SELECT_VALUE'\r\n\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  FETCH_TEMPLATE_SUCCESS,\r\n  FETCH_TEMPLATE_ERROR,\r\n  FETCH_TEMPLATE_REQUEST,\r\n  CHANGE_ORDER_FIELD,\r\n  CHANGE_DATE_FIELD,\r\n  CHANGE_CATEGORY,\r\n} from \"./Types\"\r\nimport axios from 'axios'\r\n\r\n//action creator\r\nexport const changecategory=(category)=>{\r\n    return{\r\n        type: CHANGE_CATEGORY,\r\n        payload: category,\r\n        \r\n    }\r\n}\r\nexport const changeorderfield=(ordervalue)=>{\r\n    return{\r\n        type: CHANGE_ORDER_FIELD,\r\n        payload: ordervalue\r\n    }\r\n}\r\nexport const changedatefield=(datevalue)=>{\r\n    return{\r\n        type: CHANGE_DATE_FIELD,\r\n        payload: datevalue\r\n    }\r\n}\r\nexport const changesearchfield = (searchvalue) => {\r\n  return {\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: searchvalue,\r\n  };\r\n}\r\n\r\nexport const fetchtemplatesrequest = () => {\r\n  return {\r\n    type: FETCH_TEMPLATE_REQUEST,\r\n  };\r\n}\r\nexport const fetchtemplateserror =(errormessage)=>{\r\n    return{\r\n        type: FETCH_TEMPLATE_ERROR,\r\n        payload: errormessage\r\n    }\r\n}\r\nexport const fetchtemplatessuccess=(results)=>{\r\n    return{\r\n        type: FETCH_TEMPLATE_SUCCESS,\r\n        payload:results\r\n    }\r\n}\r\n\r\nexport const fetchfromapi = () => {\r\n  return (dispatch) => {\r\n      dispatch( fetchtemplatesrequest)\r\n    return axios.get(\"https://front-end-task-dot-fpls-dev.uc.r.appspot.com/api/v1/public/task_templates\")\r\n      .then(result=> dispatch(fetchtemplatessuccess(result.data)))\r\n      .catch(error => dispatch(fetchtemplateserror(error.message)));\r\n  };\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/search.0d7a3d8a.svg\";","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changesearchfield,fetchfromapi, changecategory, changeorderfield, changedatefield } from \"../Redux/Actions\";\r\nimport search from '../img/search.svg'\r\n\r\nfunction Navbar({ searchvalue,dateValue, orderValue, onsearchchange, fetchtemplates,changecategory, changingorder, changebydate}) {\r\n  useEffect(() => {\r\n    fetchtemplates();\r\n  }, []);\r\n\r\n  console.log(searchvalue);\r\n  const handleChange =(e)=> {\r\n    changecategory(e);\r\n    searchvalue = ''\r\n    dateValue = 'Default'\r\n    orderValue = 'Default'\r\n  }\r\n  return (\r\n    <div>\r\n      <nav className=\"m-4 mt-8 flow-root\">\r\n        <div className=\"w-full md:w-4/6 lg:w-2/6 lg:float-left\">\r\n          <input value={searchvalue}\r\n            onChange={(e) => onsearchchange(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Search Templates\"\r\n            className=\"border border-gray-200 rounded-sm p-3 pt-2 px-4 w-full md:w-4/5 focus:outline-none focus:ring focus:ring-gray-100\"\r\n          />\r\n          <button className='p-1 outline-none align-middle -ml-10'>\r\n              <img className='w-5 opacity-60' src={search}/>\r\n          </button>\r\n        </div>\r\n        <div className=\"my-4 text-gray-400 text-sm md:w-5/6 md:justify-start md:flex lg:float-right lg:my-0 lg:w-4/6 lg:justify-end\">\r\n          <div className=\"md:my-3 md:mr-3 pt-2 text-gray-400 lg:mx-4 lg:my-1\">\r\n            Sort By:\r\n          </div>\r\n          <div className=\"grid grid-cols-1 md:gap-8 md:grid-cols-3\">\r\n              <fieldset className='fieldset'>\r\n                  <legend className='mx-1'>\r\n                    category\r\n                  </legend>\r\n                  <select className=\"select\" onChange={e => handleChange(e.target.value)}>\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"education\">Education</option>\r\n                    <option value=\"ecommerce\">E-commerce</option>\r\n                    <option value=\"health\">Health</option>\r\n                </select>\r\n              </fieldset>\r\n            \r\n            <fieldset className='fieldset'>\r\n                <legend className='mx-1'>\r\n                    order\r\n                </legend>\r\n                <select className=\"select\" value={orderValue} onChange={e=>changingorder(e.target.value)}>\r\n                    <option value=\"Default\">Default</option>\r\n                    <option value=\"Ascending\">Ascending</option>\r\n                    <option value=\"Descending\">Descending</option>\r\n                </select>\r\n            </fieldset>\r\n            \r\n            <fieldset className='fieldset'>\r\n                <legend className='mx-1'>\r\n                    date\r\n                </legend>\r\n                <select className=\"select\" value={dateValue} onChange={e=>changebydate(e.target.value)}>\r\n                <option value=\"Default\">Default</option>\r\n                <option value=\"Ascending\">Ascending</option>\r\n                <option value=\"Descending\">Descending</option>\r\n                </select>\r\n            </fieldset>\r\n           \r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchvalue: state.searchfield,\r\n    dateValue: state.datefield,\r\n    orderValue: state.orderfield,\r\n\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onsearchchange: (eventval) => {\r\n      dispatch(changesearchfield(eventval));\r\n    },\r\n    fetchtemplates: ()=>{\r\n        dispatch(fetchfromapi())\r\n    },\r\n    changecategory:(e)=>{\r\n        dispatch(changecategory(e))\r\n    },\r\n    changingorder:(eventval)=>{\r\n        dispatch(changeorderfield(eventval))\r\n    },\r\n    changebydate:(e)=>{\r\n        dispatch(changedatefield(e))\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","import React from 'react'\r\n\r\nfunction Card(props) {\r\n   \r\n    return (\r\n        <div className='card min-h-1'>\r\n            <div className='p-4 h-4/5'>\r\n                <div className='text-2xl h-2/4 py-2 flex items-center capitalize'>\r\n                    {props.info.name}\r\n                </div>\r\n                <div className='text-sm h-2/4 py-2 flex items-center font-normal text-gray-600 text-base'>\r\n                    {props.info.description}\r\n                </div>\r\n            </div>\r\n            <div className='h-1/5 w-full bg-gray-100 text-lightgreen font-medium text-sm p-4 py-2 flex items-center bottom-0 left-0'>\r\n                <a>\r\n                    {props.info.link}\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport './Skeleton.css'\r\n\r\n\r\nfunction SkeletonCard({type}) {\r\n    const classes = `skeleton ${type}`\r\n    return (\r\n        <div className={classes}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkeletonCard\r\n","import React from 'react'\r\n\r\nfunction Shimmer() {\r\n    return (\r\n        <div className='shimmer-wrapper'>\r\n            <div className='shimmer'> </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shimmer\r\n","import React from 'react'\r\nimport SkeletonCard from './SkeletonCard'\r\nimport Shimmer from './Shimmer'\r\n\r\n\r\nfunction SkeletonContainer() {\r\n    return (\r\n        <div className='card h-40 w-11/12 relative overflow-hidden'>\r\n            <div className='p-2 px-4 h-3/5'>\r\n                    <SkeletonCard type=\"title\" />\r\n                    <SkeletonCard type=\"text\" />\r\n                    <SkeletonCard type=\"text\" />\r\n            </div>\r\n            <div className='h-2/5 p-2 px-4'>\r\n                <SkeletonCard type=\"text\" />\r\n            </div> \r\n            <Shimmer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkeletonContainer\r\n","import React from 'react'\r\n\r\nconst Pagination = ({pageAmount, totalContent, paginate, prevPage, pgLimit, maxPgLimit, minPgLimit}) => {\r\n    const pageNumbers = [], totalRows = Math.ceil(totalContent/pageAmount);\r\n    \r\n    for (let i = 1; i <= totalRows; i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { pageNumbers.map(i => {\r\n                 if (i > minPgLimit && i <= maxPgLimit) {\r\n                     return (\r\n                        <ul key={i} className='w-4/5 mx-auto flex mt-16 font-semibold text-gray-800'>\r\n                            <div>\r\n                                <button onClick={()=> prevPage()} className='font-semibold focus:outline-none'> Previous </button>\r\n                            </div>\r\n                           \r\n                         <div className='w-2/4 mx-auto flex text-center justify-center'>\r\n                             <li className='paginate'>\r\n                                {i}\r\n                            </li> <span className='my-0 mx-3'> of <span className='mx-1'>{totalRows}</span> </span> \r\n                         </div>\r\n                         <div>\r\n                            <button onClick={()=> paginate()} className='font-semibold focus:outline-none'> \r\n                                <span className='py-1'> Next</span>\r\n                                <i className=\"fas fa-chevron-right mx-3\"></i> \r\n                            </button>\r\n                         </div>\r\n                            \r\n                        </ul>\r\n                    )\r\n                 } else {\r\n                     return null;\r\n                 }\r\n                \r\n              } \r\n             )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","export default __webpack_public_path__ + \"static/media/info.ac330963.svg\";","import React from 'react'\r\nimport info from \"../img/info.svg\";\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Subnav({category}) {\r\n    return (\r\n        <div>\r\n        <div className=\"bg-lightorange text-center font-bold flex justify-center items-center text-xs md:text-sm p-3 my-6 mx-4 md:p-3 md:my-12 lg:p-4\">\r\n          <span className=\"mx-1 md:mx-3\">\r\n            <img className=\"w-16 md:w-6\" src={info} />\r\n          </span>\r\n          Tada! Get started with a free template. Can't find what you are\r\n          looking for? Search from 1000 available templates\r\n        </div>\r\n        <div className=\"text-gray-600 my-5 mx-4 text-base font-medium flow-root\">\r\n          <div className=\"float-left capitalize\">{category} templates</div>\r\n          <div className=\"float-right text-xs text-gray-400\">\r\n            2000 templates\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps =(state)=> {\r\n    return {\r\n        category: state.categoryfield\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Subnav)\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Card from \"./Card\";\r\nimport SkeletonContainer from \"../skeleton/SkeletonContainer\";\r\nimport Pagination from \"./Pagination\";\r\nimport { connect } from \"react-redux\";\r\nimport Subnav from \"./Subnav\";\r\n\r\nfunction Content({ data,error, searchvalue, category, ordervalue, datevalue }) {\r\n  let ordersortvalue, datesortvalue;\r\n  console.log(error)\r\n\r\n  const filteredData = data.filter((res) => {\r\n      return res.name.search(searchvalue) !== -1;\r\n    }),\r\n    [page, setPage] = useState(1),\r\n    [pageAmount] = useState(15),\r\n    [pgLimit, setpgLimit] = useState(1),\r\n    [maxPgLimit, setmaxPgLimit] = useState(1),\r\n    [minPgLimit, setminPgLimit] = useState(0);\r\n\r\n  // sort category\r\n  if (category === \"all\") {\r\n    category = \"All\";\r\n  } else if (category === \"health\") {\r\n    category = \"Health\";\r\n  } else if (category === \"education\") {\r\n    category = \"Education\";\r\n  } else {\r\n    category = \"E-commerce\";\r\n  }\r\n  //   sort alphabetically\r\n  if (ordervalue === \"Ascending\") {\r\n    ordersortvalue = filteredData.sort((a, b) => {\r\n      return a.name.localeCompare(b.name);\r\n    });\r\n  } else if (ordervalue === \"Descending\") {\r\n    ordersortvalue = filteredData.sort((a, b) => {\r\n      return b.name.localeCompare(a.name);\r\n    });\r\n  } else {\r\n    ordersortvalue = filteredData;\r\n  }\r\n\r\n  //   sort by date\r\n  if (datevalue === \"Ascending\") {\r\n    datesortvalue = filteredData.sort((a, b) => {\r\n      return new Date(a.created) - new Date(b.created);\r\n    });\r\n  } else if (datevalue === \"Descending\") {\r\n    datesortvalue = filteredData.sort((a, b) => {\r\n      return new Date(b.created) - new Date(a.created);\r\n    });\r\n  } else {\r\n    datesortvalue = filteredData;\r\n  }\r\n\r\n  // Get current page\r\n  const lastContent = page * pageAmount,\r\n    firstContent = lastContent - pageAmount,\r\n    currentContent = ordersortvalue.slice(firstContent, lastContent);\r\n\r\n  // next page\r\n  const paginate = () => {\r\n    setPage(page + 1);\r\n    if (page + 1 > maxPgLimit) {\r\n      setmaxPgLimit(maxPgLimit + pgLimit);\r\n      setminPgLimit(minPgLimit + pgLimit);\r\n    }\r\n  };\r\n\r\n  // previous page\r\n  const prevPaginate = () => {\r\n    setPage(page - 1);\r\n    if ((page - 1) % pgLimit === 0) {\r\n      setmaxPgLimit(maxPgLimit - pgLimit);\r\n      setminPgLimit(minPgLimit - pgLimit);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Subnav />\r\n\r\n      <div>\r\n        {data.length > 0 && (\r\n          <div className=\"card-container\">\r\n            {currentContent.map((data, id) => (\r\n              <Card key={id} info={data} />\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {data <= 0 && (\r\n          <div className=\"card-container\">\r\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15].map((i) => (\r\n              <SkeletonContainer key={i} />\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {data <= 0 && error !='' && (\r\n            <div className=\"card-container\">\r\n                <h1 className='text-4xl text-blue-400 font-semibold'>Oops! an error occurred</h1>\r\n            </div>\r\n        )}\r\n\r\n        <Pagination\r\n          pageAmount={pageAmount}\r\n          totalContent={data.length}\r\n          paginate={paginate}\r\n          prevPage={prevPaginate}\r\n          pgLimit={pgLimit}\r\n          maxPgLimit={maxPgLimit}\r\n          minPgLimit={minPgLimit}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.Data,\r\n    error: state.error,\r\n    searchvalue: state.searchfield,\r\n    category: state.categoryfield,\r\n    ordervalue: state.orderfield,\r\n    datevalue: state.datefield,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Content);\r\n","import React from 'react'\r\nimport Content from './Content'\r\n\r\nfunction Main() {\r\n\r\n    return (\r\n        <div className=''>\r\n            <Content />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  FETCH_TEMPLATE_DETAILS,\r\n  FETCH_TEMPLATE_SUCCESS,\r\n  FETCH_TEMPLATE_ERROR,\r\n  FETCH_TEMPLATE_REQUEST,\r\n  CHANGE_CATEGORY,\r\n  CHANGE_ORDER_FIELD,\r\n  CHANGE_DATE_FIELD,\r\n} from \"./Types\";\r\n\r\nexport const initialstate = {\r\n  searchfield: \"\",\r\n  loading: false,\r\n  error: \"\",\r\n  categoryfield: \"all\",\r\n  orderfield: \"default\",\r\n  datefield: \"default\",\r\n  Data: [],  \r\n};\r\n\r\nconst reducer = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return {\r\n        ...state,\r\n        searchfield: action.payload,\r\n      };\r\n    case FETCH_TEMPLATE_DETAILS:\r\n      return {\r\n        ...state,\r\n        Data: action.payload,\r\n      };\r\n    case FETCH_TEMPLATE_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_TEMPLATE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        Data: action.payload,\r\n      };\r\n    case FETCH_TEMPLATE_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case CHANGE_CATEGORY:\r\n      return {\r\n        ...state,\r\n        categoryfield: action.payload,\r\n        orderfield: \"default\",\r\n        datefield: \"default\",\r\n        searchfield: \"\",\r\n      };\r\n    case CHANGE_ORDER_FIELD:\r\n      return {\r\n        ...state,\r\n        orderfield: action.payload,\r\n      };\r\n    case CHANGE_DATE_FIELD:\r\n      return {\r\n        ...state,\r\n        datefield: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","import {createStore, applyMiddleware} from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from './Reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nconst store =createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import '../css/App.css';\nimport Navbar from './Navbar'\nimport Main from './Main';\nimport {Provider} from 'react-redux'\nimport store from '../Redux/store'\nfunction App() {\n  return (\n    <Provider store= {store}>\n    <div className=\"App w-11/12 mx-auto py-5 h-10/12\">\n        <Navbar />\n        <Main />\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './css/index.css'\nimport App from './components/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}