{"version":3,"sources":["Redux/Types.js","Redux/Actions.js","img/search.svg","components/Navbar.js","components/Card.js","skeleton/SkeletonCard.js","skeleton/Shimmer.js","skeleton/SkeletonContainer.js","components/Pagination.js","img/info.svg","components/Content.js","components/Main.js","Redux/Reducers.js","Redux/store.js","components/App.js","index.js"],"names":["CHANGE_SEARCH_FIELD","FETCH_TEMPLATE_DETAILS","FETCH_TEMPLATE_REQUEST","FETCH_TEMPLATE_SUCCESS","FETCH_TEMPLATE_ERROR","CHANGE_CATEGORY","CHANGE_ORDER_FIELD","CHANGE_DATE_FIELD","fetchtemplatesrequest","type","fetchfromapi","dispatch","fetch","then","res","json","result","payload","catch","error","connect","state","searchvalue","searchfield","details","Data","onsearchchange","eventval","fetchtemplates","changecategory","e","changingorder","changebydate","useEffect","console","log","className","onChange","target","value","placeholder","src","search","Card","props","info","name","description","href","link","SkeletonCard","classes","Shimmer","SkeletonContainer","Pagination","pageAmount","totalContent","paginate","prevPage","maxPgLimit","pgLimit","minPgLimit","pageNumbers","totalRows","Math","ceil","i","push","map","onClick","data","category","categoryfield","ordervalue","orderfield","datevalue","datefield","ordersortvalue","filteredData","filter","useState","page","setPage","setmaxPgLimit","setminPgLimit","sort","a","b","localeCompare","Date","created","lastContent","firstContent","currentContent","slice","length","id","Main","initialstate","loading","reducer","action","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcfa3ae6.chunk.js","sourcesContent":["export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\"\r\nexport const FETCH_TEMPLATE_DETAILS = \"FETCH_TEMPLATE_DETAILS\"\r\nexport const FETCH_TEMPLATE_REQUEST = \"FETCH_TEMPLATE_REQUEST\"\r\nexport const FETCH_TEMPLATE_SUCCESS = \"FETCH_TEMPLATE_SUCCESS\"\r\nexport const FETCH_TEMPLATE_ERROR = \"FETCH_TEMPLATE_ERROR\"\r\nexport const CHANGE_CATEGORY = 'CHANGE_CATEGORY'\r\nexport const CHANGE_ORDER_FIELD = \"CHANGE_ORDER_FIELD\"\r\nexport const CHANGE_DATE_FIELD = 'CHANGE_DATE_FIELD'\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  FETCH_TEMPLATE_DETAILS,\r\n  FETCH_TEMPLATE_SUCCESS,\r\n  FETCH_TEMPLATE_ERROR,\r\n  FETCH_TEMPLATE_REQUEST,\r\n  CHANGE_ORDER_FIELD,\r\n  CHANGE_DATE_FIELD,\r\n  CHANGE_CATEGORY\r\n} from \"./Types\";\r\n\r\n//action creator\r\nexport const changecategory=(category)=>{\r\n    return{\r\n        type: CHANGE_CATEGORY,\r\n        payload: category\r\n    }\r\n}\r\nexport const changeorderfield=(ordervalue)=>{\r\n    return{\r\n        type: CHANGE_ORDER_FIELD,\r\n        payload: ordervalue\r\n    }\r\n}\r\nexport const changedatefield=(datevalue)=>{\r\n    return{\r\n        type: CHANGE_DATE_FIELD,\r\n        payload: datevalue\r\n    }\r\n}\r\nexport const changesearchfield = (searchvalue) => {\r\n  return {\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: searchvalue,\r\n  };\r\n};\r\nexport const fetchtemplatesrequest = () => {\r\n  return {\r\n    type: FETCH_TEMPLATE_REQUEST,\r\n  };\r\n};\r\nexport const fetchtemplateserror =(errormessage)=>{\r\n    return{\r\n        type: FETCH_TEMPLATE_ERROR,\r\n        payload: errormessage\r\n    }\r\n}\r\nexport const fetchtemplatessuccess=(results)=>{\r\n    return{\r\n        type: FETCH_TEMPLATE_SUCCESS,\r\n        payload:results\r\n    }\r\n}\r\n\r\nexport const fetchfromapi = () => {\r\n  return (dispatch) => {\r\n      dispatch( fetchtemplatesrequest)\r\n    fetch(\r\n      \"https://front-end-task-dot-fpls-dev.uc.r.appspot.com/api/v1/public/task_templates\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then(result=> dispatch(fetchtemplatessuccess(result)))\r\n      .catch(error => dispatch(fetchtemplateserror(error)));\r\n  };\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/search.0d7a3d8a.svg\";","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changesearchfield,fetchfromapi, changecategory, changeorderfield, changedatefield } from \"../Redux/Actions\";\r\nimport search from '../img/search.svg'\r\n\r\nfunction Navbar({ searchvalue, onsearchchange, fetchtemplates, details,changecategory, changingorder, changebydate }) {\r\n  useEffect(() => {\r\n    fetchtemplates();\r\n  }, []);\r\n\r\n  console.log(searchvalue);\r\n  //console.log(details)\r\n  return (\r\n    <div>\r\n      <nav className=\"m-4 mt-8 flow-root\">\r\n        <div className=\"w-full md:w-4/6 lg:w-2/6 lg:float-left\">\r\n          <input\r\n            onChange={(e) => onsearchchange(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Search Templates\"\r\n            className=\"border border-gray-200 rounded-sm p-3 pt-2 px-4 w-full md:w-4/5 focus:outline-none focus:ring focus:ring-gray-100\"\r\n          />\r\n          <button className='p-1 outline-none align-middle -ml-10'>\r\n              <img className='w-5 opacity-60' src={search}/>\r\n          </button>\r\n        </div>\r\n        <div className=\"my-4 text-gray-400 text-sm md:w-5/6 md:justify-start md:flex lg:float-right lg:my-0 lg:w-4/6 lg:justify-end\">\r\n          <div className=\"md:my-3 md:mr-3 pt-2 text-gray-400 lg:mx-4 lg:my-1\">\r\n            Sort By:\r\n          </div>\r\n          <div className=\"grid grid-cols-1 md:gap-8 md:grid-cols-3\">\r\n              <fieldset className='fieldset'>\r\n                  <legend className='mx-1'>\r\n                    category\r\n                  </legend>\r\n                  <select className=\"select\" onChange={e=>changecategory(e.target.value)}>\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"education\">Education</option>\r\n                    <option value=\"ecommerce\">E-commerce</option>\r\n                    <option value=\"health\">Health</option>\r\n                </select>\r\n              </fieldset>\r\n            \r\n            <fieldset className='fieldset'>\r\n                <legend className='mx-1'>\r\n                    order\r\n                </legend>\r\n                <select className=\"select\" onChange={e=>changingorder(e.target.value)}>\r\n                    <option value=\"Default\">Default</option>\r\n                    <option value=\"Ascending\">Ascending</option>\r\n                    <option value=\"Descending\">Descending</option>\r\n                </select>\r\n            </fieldset>\r\n            \r\n            <fieldset className='fieldset'>\r\n                <legend className='mx-1'>\r\n                    date\r\n                </legend>\r\n                <select className=\"select\" onChange={e=>changebydate(e.target.value)}>\r\n                <option value=\"Default\">Default</option>\r\n                <option value=\"Ascending\">Ascending</option>\r\n                <option value=\"Descending\">Descending</option>\r\n                </select>\r\n            </fieldset>\r\n           \r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchvalue: state.searchfield,\r\n    details: state.Data\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onsearchchange: (eventval) => {\r\n      dispatch(changesearchfield(eventval));\r\n    },\r\n    fetchtemplates: ()=>{\r\n        dispatch(fetchfromapi())\r\n    },\r\n    changecategory:(e)=>{\r\n        dispatch(changecategory(e))\r\n    },\r\n    changingorder:(eventval)=>{\r\n        dispatch(changeorderfield(eventval))\r\n    },\r\n    changebydate:(e)=>{\r\n        dispatch(changedatefield(e))\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","import React from 'react'\r\n\r\nfunction Card(props) {\r\n   \r\n    return (\r\n        <div className='card min-h-1'>\r\n            <div className='p-4 h-4/5'>\r\n                <div className='text-2xl h-2/4 py-2 flex items-center capitalize'>\r\n                    {props.info.name}\r\n                </div>\r\n                <div className='text-sm h-2/4 py-2 flex items-center font-normal text-gray-600 text-base'>\r\n                    {props.info.description}\r\n                </div>\r\n            </div>\r\n            <div className='h-1/5 bg-gray-100 text-lightgreen font-medium text-sm p-4 py-2 flex items-center'>\r\n                    <a href='!#'>\r\n                        {props.info.link}\r\n                    </a>\r\n            </div>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport './Skeleton.css'\r\n\r\n\r\nfunction SkeletonCard({type}) {\r\n    const classes = `skeleton ${type}`\r\n    return (\r\n        <div className={classes}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkeletonCard\r\n","import React from 'react'\r\n\r\nfunction Shimmer() {\r\n    return (\r\n        <div className='shimmer-wrapper'>\r\n            <div className='shimmer'> </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shimmer\r\n","import React from 'react'\r\nimport SkeletonCard from './SkeletonCard'\r\nimport Shimmer from './Shimmer'\r\n\r\n\r\nfunction SkeletonContainer() {\r\n    return (\r\n        <div className='card h-40 w-11/12 relative overflow-hidden'>\r\n            <div className='p-2 px-4 h-3/5'>\r\n                    <SkeletonCard type=\"title\" />\r\n                    <SkeletonCard type=\"text\" />\r\n                    <SkeletonCard type=\"text\" />\r\n            </div>\r\n            <div className='h-2/5 p-2 px-4'>\r\n                <SkeletonCard type=\"text\" />\r\n            </div> \r\n            <Shimmer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkeletonContainer\r\n","import React from 'react'\r\n\r\nconst Pagination = ({pageAmount, totalContent, paginate, prevPage, pgLimit, maxPgLimit, minPgLimit}) => {\r\n    const pageNumbers = [], totalRows = Math.ceil(totalContent/pageAmount);\r\n    \r\n    for (let i = 1; i <= totalRows; i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { pageNumbers.map(i => {\r\n                 if (i > minPgLimit && i <= maxPgLimit) {\r\n                     return (\r\n                        <ul key={i} className='w-4/5 mx-auto flex mt-16 font-semibold text-gray-800'>\r\n                            <div>\r\n                                <button onClick={()=> prevPage()} className='font-semibold focus:outline-none'> Previous </button>\r\n                            </div>\r\n                           \r\n                         <div className='w-2/4 mx-auto flex text-center justify-center'>\r\n                             <li className='paginate'>\r\n                                {i}\r\n                            </li> <span className='my-0 mx-3'> of <span className='mx-1'>{totalRows}</span> </span> \r\n                         </div>\r\n                         <div>\r\n                            <button onClick={()=> paginate()} className='font-semibold focus:outline-none'> \r\n                                <span className='py-1'> Next</span>\r\n                                <i className=\"fas fa-chevron-right mx-3\"></i> \r\n                            </button>\r\n                         </div>\r\n                            \r\n                        </ul>\r\n                    )\r\n                 } else {\r\n                     return null;\r\n                 }\r\n                \r\n              } \r\n             )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","export default __webpack_public_path__ + \"static/media/info.529db062.svg\";","import React, {useState, useEffect} from 'react'\r\nimport Card from './Card'\r\nimport SkeletonContainer from '../skeleton/SkeletonContainer'\r\nimport axios from 'axios'\r\nimport Pagination from './Pagination'\r\nimport { connect } from 'react-redux'\r\nimport info from '../img/info.svg'\r\n\r\nfunction Content({data, searchvalue, category, ordervalue, datevalue}) {\r\n   /* const [data, setData] = useState([]),\r\n          [filteredData, setfilteredData] = useState(data),*/\r\n          let ordersortvalue, \r\n              datesortvalue;\r\n\r\n          const filteredData = data.filter((res)=>{\r\n              return res.name.search(searchvalue) !== -1\r\n          }),\r\n          [page, setPage] = useState(1),\r\n          [pageAmount] = useState(15),\r\n  \r\n          [pgLimit, setpgLimit] = useState(1),\r\n          [maxPgLimit, setmaxPgLimit] = useState(1),\r\n          [minPgLimit, setminPgLimit] = useState(0)\r\n    \r\n        // sort category\r\n        if(category===\"all\"){\r\n            category = 'All'\r\n        }\r\n        else if(category===\"health\"){\r\n            category = 'Health'\r\n        }\r\n        else if (category==='education'){\r\n            category = 'Education'\r\n        }\r\n        else{\r\n            category = 'E-commerce'\r\n        }\r\n        //   sort alphabetically\r\n          if(ordervalue === \"Ascending\"){\r\n              ordersortvalue = filteredData.sort((a,b)=>{\r\n                 return a.name.localeCompare(b.name)\r\n              })\r\n          }\r\n          else if(ordervalue === \"Descending\"){\r\n            ordersortvalue= filteredData.sort((a,b)=>{\r\n                return b.name.localeCompare(a.name)\r\n             })\r\n          }\r\n          else{\r\n              ordersortvalue=filteredData\r\n          }\r\n\r\n          //   sort by date\r\n          if(datevalue === \"Ascending\"){\r\n            datesortvalue = filteredData.sort((a,b)=>{\r\n               return new Date(a.created) - new Date(b.created)\r\n            })\r\n        }\r\n        else if(datevalue === \"Descending\"){\r\n          datesortvalue= filteredData.sort((a,b)=>{\r\n              return new Date(b.created) - new Date(a.created)\r\n           })\r\n        }\r\n        else{\r\n            datesortvalue=filteredData\r\n        }\r\n    \r\n    /*useEffect(() => {\r\n        const fetchData = async() => {\r\n            const res = await axios.get('https://front-end-task-dot-fpls-dev.uc.r.appspot.com/api/v1/public/task_templates')\r\n            setData(res.data);\r\n            setfilteredData(res.data);\r\n        }\r\n\r\n        fetchData();\r\n    }, [])*/\r\n\r\n    \r\n\r\n    // Get current page\r\n    const lastContent = page * pageAmount,\r\n          firstContent = lastContent - pageAmount,\r\n          currentContent = ordersortvalue.slice(firstContent, lastContent) ;\r\n          \r\n    // next page \r\n    const paginate = () => {\r\n        setPage(page + 1)\r\n        if (page + 1 > maxPgLimit) {\r\n            setmaxPgLimit(maxPgLimit + pgLimit)\r\n            setminPgLimit(minPgLimit + pgLimit)\r\n        }\r\n    }\r\n\r\n    // previous page\r\n    const prevPaginate = () => {\r\n        setPage(page - 1)\r\n        if ((page - 1) % pgLimit === 0) {\r\n            setmaxPgLimit(maxPgLimit - pgLimit)\r\n            setminPgLimit(minPgLimit - pgLimit)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n            <div className='bg-lightorange text-center font-bold flex justify-center items-center text-sm p-3 my-6 mx-4 md:p-3 md:my-12 lg:p-4'>\r\n                <span className='mx-3'>\r\n                    <img className='w-6' src={info} />\r\n                </span>\r\n                Tada! Get started with a free template. Can't find what you are looking for? Search from 1000 available templates\r\n            </div>\r\n            <div className='text-gray-600 my-5 mx-4 text-base font-medium flow-root'>\r\n                <div className='float-left'>\r\n                    {category} templates\r\n                </div>\r\n                <div className='float-right text-xs text-gray-400'>\r\n                    2000 templates\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n            <div>\r\n                {data.length > 0 && (\r\n                    <div className='card-container'>\r\n                    {currentContent.map((data,id) =>  <Card key={id} info={data} />\r\n                    )}\r\n                    </div>\r\n                )}\r\n            {data <= 0 && (\r\n                <div className='card-container'>\r\n                    {[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15].map((i)=>  <SkeletonContainer key={i} /> \r\n                    )}\r\n                \r\n            </div>\r\n                \r\n            )}\r\n\r\n            <Pagination pageAmount={pageAmount} \r\n                        totalContent={data.length} \r\n                        paginate={paginate}\r\n                        prevPage={prevPaginate} \r\n                        pgLimit={pgLimit}\r\n                        maxPgLimit={maxPgLimit}\r\n                        minPgLimit={minPgLimit} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        data:state.Data,\r\n        searchvalue: state.searchfield,\r\n        category: state.categoryfield,\r\n        ordervalue: state.orderfield,\r\n        datevalue: state.datefield\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,)(Content)\r\n","import React from 'react'\r\nimport Content from './Content'\r\n\r\nfunction Main() {\r\n\r\n    return (\r\n        <div className=''>\r\n            <Content />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  FETCH_TEMPLATE_DETAILS,\r\n  FETCH_TEMPLATE_SUCCESS,\r\n  FETCH_TEMPLATE_ERROR,\r\n  FETCH_TEMPLATE_REQUEST,\r\n  CHANGE_CATEGORY,\r\n  CHANGE_ORDER_FIELD,\r\n  CHANGE_DATE_FIELD\r\n} from \"./Types\";\r\n\r\nconst initialstate = {\r\n  searchfield: \"\",\r\n  loading: false,\r\n  error: \"\",\r\n  categoryfield:'all',\r\n  orderfield:\"default\",\r\n  datefield:'default',\r\n  Data: [],\r\n};\r\n\r\nconst reducer = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return {\r\n        ...state,\r\n        searchfield: action.payload,\r\n      };\r\n    case FETCH_TEMPLATE_DETAILS:\r\n      return {\r\n        ...state,\r\n        Data:action.payload\r\n      };\r\n    case FETCH_TEMPLATE_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_TEMPLATE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        Data: action.payload,\r\n      };\r\n    case FETCH_TEMPLATE_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n      case CHANGE_CATEGORY:\r\n        return{\r\n            ...state,\r\n            categoryfield:action.payload\r\n        };\r\n    case CHANGE_ORDER_FIELD:\r\n        return{\r\n            ...state,\r\n            orderfield:action.payload\r\n        };\r\n    case CHANGE_DATE_FIELD:\r\n        return{\r\n            ...state,\r\n            datefield:action.payload\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","import {createStore, applyMiddleware} from 'redux'\r\nimport reducer from './Reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nconst store =createStore(reducer, applyMiddleware(thunk))\r\n\r\nexport default store","import '../css/App.css';\nimport Navbar from './Navbar'\nimport Main from './Main';\nimport {Provider} from 'react-redux'\nimport store from '../Redux/store'\nfunction App() {\n  return (\n    <Provider store= {store}>\n    <div className=\"App w-11/12 mx-auto py-5 h-10/12\">\n        <Navbar />\n        <Main />\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './css/index.css'\nimport App from './components/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}